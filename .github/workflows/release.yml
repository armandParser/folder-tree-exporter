name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Required for creating releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: tree-export
            asset_name: tree-export-linux
          - os: macos-latest
            artifact_name: tree-export
            asset_name: tree-export-macos
          - os: windows-latest
            artifact_name: tree-export.exe
            asset_name: tree-export-windows.exe

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rye
      uses: eifinger/setup-rye@v4
      with:
        enable-cache: true
    
    - name: Sync dependencies
      run: rye sync
    
    - name: Add PyInstaller
      run: rye add --dev pyinstaller
    
    - name: Build executable
      run: rye run pyinstaller --onefile --name tree-export src/folder_tree_exporter/cli.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Organize files for release
      run: |
        mkdir -p release-files
        cp artifacts/tree-export-linux/tree-export release-files/tree-export-linux
        cp artifacts/tree-export-macos/tree-export release-files/tree-export-macos  
        cp artifacts/tree-export-windows.exe/tree-export.exe release-files/tree-export-windows.exe
        ls -la release-files/
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: release-files/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}